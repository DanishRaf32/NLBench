function fJac = ESB_Jac(n,s,Bndry,order,x,e0,l,PJac,gJac)
%analytical calculation of jacobi matrix of electrostatic beam
PJac=sparse(4*n, 4*n);
gJac=sparse(4*n,4*n);

k = 1/(4*pi*e0);

X=x;

if Bndry==[1 n] 
    x = [0;x(1:2*n-2);0;x(2*n-1:4*n-2)]; %include zero nodes for Bndry=[1 n]
    Boundry=[1 2*n-1];
elseif Bndry==1
    x= [0;0;x(1:4*n-2)];
    Boundry=[1 2];
end

% gJac=sparse(4*n,4*n);
% PJac=sparse(4*n,4*n);

for i=1:1:2*n
    for j=1:1:2*n
        if i~=j
            % case (2)
            if(i<=n && j<=n) && not((i>=n+1 || sum(i==Bndry)>0)) && not((j>=n+1 || sum(j==Bndry)>0))
                % Pdy(1)
                PJac(2*n+i,2*i-1)=PJac(2*n+i,2*i-1)+(x(2*i-1)-x(2*j-1))/sqrt((i-j)^2*l^2+(x(2*i-1)-x(2*j-1))^2)^3*x(2*n+j);
                 %------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                 % Pdydy (1)
                 %------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                 % d / dx(2*i-1)
                    gJac(2*i-1,2*i-1)=gJac(2*i-1,2*i-1)+(x(2*n+i)*x(2*n+j))/((x(2*i-1) - x(2*j-1))^2 + l^2*(i - j)^2)^(3/2) - (3*x(2*n+i)*x(2*n+j)*(2*x(2*i-1) - 2*x(2*j-1))*(x(2*i-1) - x(2*j-1)))/(2*((x(2*i-1) - x(2*j-1))^2 + l^2*(i - j)^2)^(5/2));
                 % d / dx(2*j-1)
                    gJac(2*i-1,2*j-1)=gJac(2*i-1,2*j-1)+(3*x(2*n+i)*x(2*n+j)*(2*x(2*i-1) - 2*x(2*j-1))*(x(2*i-1) - x(2*j-1)))/(2*((x(2*i-1) - x(2*j-1))^2 + l^2*(i - j)^2)^(5/2)) - (x(2*n+i)*x(2*n+j))/((x(2*i-1) - x(2*j-1))^2 + l^2*(i - j)^2)^(3/2);
                 % d / dx(2*n+i)
                    gJac(2*i-1,2*n+i)=gJac(2*i-1,2*n+i)+(x(2*n+j)*(x(2*i-1) - x(2*j-1)))/((x(2*i-1) - x(2*j-1))^2 + l^2*(i - j)^2)^(3/2);
                 % d / dx(2*n+j)
                    gJac(2*i-1,2*n+j)=gJac(2*i-1,2*n+j)+(x(2*n+i)*(x(2*i-1) - x(2*j-1)))/((x(2*i-1) - x(2*j-1))^2 + l^2*(i - j)^2)^(3/2);
                 
                 % Pdy (2)
                 PJac(2*n+i,2*j-1)=PJac(2*n+i,2*j-1)-(x(2*i-1)-x(2*j-1))/sqrt((i-j)^2*l^2+(x(2*i-1)-x(2*j-1))^2)^3*x(2*n+j);
                 %------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                 % Pdydy (2)
                 %------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                 % d / dx(2*i-1)
                    gJac(2*j-1,2*i-1)=gJac(2*j-1,2*i-1)+(3*x(2*n+i)*x(2*n+j)*(2*x(2*i-1) - 2*x(2*j-1))*(x(2*i-1) - x(2*j-1)))/(2*((x(2*i-1) - x(2*j-1))^2 + l^2*(i - j)^2)^(5/2)) - (x(2*n+i)*x(2*n+j))/((x(2*i-1) - x(2*j-1))^2 + l^2*(i - j)^2)^(3/2);
                 % d / dx(2*j-1)
                    gJac(2*j-1,2*j-1)=gJac(2*j-1,2*j-1)+(x(2*n+i)*x(2*n+j))/((x(2*i-1) - x(2*j-1))^2 + l^2*(i - j)^2)^(3/2) - (3*x(2*n+i)*x(2*n+j)*(2*x(2*i-1) - 2*x(2*j-1))*(x(2*i-1) - x(2*j-1)))/(2*((x(2*i-1) - x(2*j-1))^2 + l^2*(i - j)^2)^(5/2));
                 % d / dx(2*n+i)
                    gJac(2*j-1,2*n+i)=gJac(2*j-1,2*n+i)-(x(2*n+j)*(x(2*i-1) - x(2*j-1)))/((x(2*i-1) - x(2*j-1))^2 + l^2*(i - j)^2)^(3/2);
                 % d / dx(2*n+j)
                    gJac(2*j-1,2*n+j)=gJac(2*j-1,2*n+j)-(x(2*n+i)*(x(2*i-1) - x(2*j-1)))/((x(2*i-1) - x(2*j-1))^2 + l^2*(i - j)^2)^(3/2);        
            end
            % case (3)
            if(i<=n && j<=n) && not(i>=n+1 || sum(i==Bndry)>0) && (j>=n+1 || sum(j==Bndry)>0)
                % Pdy(3)
                PJac(2*n+i,2*i-1)=PJac(2*n+i,2*i-1)+x(2*i-1)/sqrt((i-j)^2*l^2+x(2*i-1)^2)^3*x(2*n+j);
                 %------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                 % Pdydy (3)
                 %------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                 % d / dx(2*i-1)
                    gJac(2*i-1,2*i-1)=gJac(2*i-1,2*i-1)+(x(2*n+i)*x(2*n+j))/(l^2*(i - j)^2 + x(2*i-1)^2)^(3/2) - (3*x(2*i-1)^2*x(2*n+i)*x(2*n+j))/(l^2*(i - j)^2 + x(2*i-1)^2)^(5/2);
                 % d / dx(2*n+i)
                    gJac(2*i-1,2*n+i)=gJac(2*i-1,2*n+i)+(x(2*i-1)*x(2*n+j))/(l^2*(i - j)^2 + x(2*i-1)^2)^(3/2);
                 % d / dx(2*n+j)
                    gJac(2*i-1,2*n+j)=gJac(2*i-1,2*n+j)+(x(2*i-1)*x(2*n+i))/(l^2*(i - j)^2 + x(2*i-1)^2)^(3/2);
            end
            % case (4)
            if(i<=n && j<=n) && (i>=n+1 || sum(i==Bndry)>0) && not(j>=n+1 || sum(j==Bndry)>0)
                % Pdy (4)
                PJac(2*n+i,2*j-1)=PJac(2*n+i,2*j-1)+x(2*j-1)/sqrt((i-j)^2*l^2+x(2*j-1)^2)^3*x(2*n+j);
                 %------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                 % Pdydy (4)
                 %------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                 % d / dx(2*j-1)
                    gJac(2*j-1,2*j-1)=gJac(2*j-1,2*j-1)+(x(2*n+i)*x(2*n+j))/(l^2*(i - j)^2 + x(2*j-1)^2)^(3/2) - (3*x(2*j-1)^2*x(2*n+i)*x(2*n+j))/(l^2*(i - j)^2 + x(2*j-1)^2)^(5/2);
                 % d / dx(2*n+i)
                    gJac(2*j-1,2*n+i)=gJac(2*j-1,2*n+i)+(x(2*j-1)*x(2*n+j))/(l^2*(i - j)^2 + x(2*j-1)^2)^(3/2);
                 % d / dx(2*n+j)
                    gJac(2*j-1,2*n+j)=gJac(2*j-1,2*n+j)+(x(2*j-1)*x(2*n+i))/(l^2*(i - j)^2 + x(2*j-1)^2)^(3/2);
            end
            % case (8)
            if(i<=n && j>n) && not(i>=n+1 || sum(i==Bndry)>0) && i~=j-n
                % Pdy (5)
                 PJac(2*n+i,2*i-1)=PJac(2*n+i,2*i-1)+(x(2*i-1)+s)/sqrt((j-n-i)^2*l^2+(x(2*i-1)+s)^2)^3*x(2*n+j);
                %------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                % Pdydy (5)
                %------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                % d / dx(2*i-1)
                    gJac(2*i-1,2*i-1)=gJac(2*i-1,2*i-1)+(x(2*n+i)*x(2*n+j))/(l^2*(i - j + n)^2 + (s + x(2*i-1))^2)^(3/2) - (3*x(2*n+i)*x(2*n+j)*(2*s + 2*x(2*i-1))*(s + x(2*i-1)))/(2*(l^2*(i - j + n)^2 + (s + x(2*i-1))^2)^(5/2));
                % d / dx(2*n+i)
                    gJac(2*i-1,2*n+i)=gJac(2*i-1,2*n+i)+(x(2*n+j)*(s + x(2*i-1)))/(l^2*(i - j + n)^2 + (s + x(2*i-1))^2)^(3/2);
                % d / dx(2*n+j)
                    gJac(2*i-1,2*n+j)=gJac(2*i-1,2*n+j)+(x(2*n+i)*(s + x(2*i-1)))/(l^2*(i - j + n)^2 + (s + x(2*i-1))^2)^(3/2);
            end
            % case (9)
            if(j<=n && i>n) && not(j>=n+1 || sum(j==Bndry)>0) && i~=j+n
                % Pdy (6)
                 PJac(2*n+i,2*j-1)=PJac(2*n+i,2*j-1)+(x(2*j-1)+s)/sqrt((i-n-j)^2*l^2+(x(2*j-1)+s)^2)^3*x(2*n+j);
                %------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                % Pdydy (6)
                %------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                % d / dx(2*j-1)
                    gJac(2*j-1,2*j-1)=gJac(2*j-1,2*j-1)+(x(2*n+i)*x(2*n+j))/(l^2*(j - i + n)^2 + (s + x(2*j-1))^2)^(3/2) - (3*x(2*n+i)*x(2*n+j)*(2*s + 2*x(2*j-1))*(s + x(2*j-1)))/(2*(l^2*(j - i + n)^2 + (s + x(2*j-1))^2)^(5/2));
                % d / dx(2*n+i)
                    gJac(2*j-1,2*n+i)=gJac(2*j-1,2*n+i)+(x(2*n+j)*(s + x(2*j-1)))/(l^2*(j - i + n)^2 + (s + x(2*j-1))^2)^(3/2);
                % d / dx(2*n+j)
                    gJac(2*j-1,2*n+j)=gJac(2*j-1,2*n+j)+(x(2*n+i)*(s + x(2*j-1)))/(l^2*(j - i + n)^2 + (s + x(2*j-1))^2)^(3/2);
            end
            % case (10)
            if i<=n && not(i>=n+1 || sum(i==Bndry)>0) && j==i+n
                % Pdy (7)
                 PJac(2*n+i,2*i-1)=PJac(2*n+i,2*i-1)+sign(x(2*i-1)+s)/(x(2*i-1)+s)^2*x(2*n+j);
                %------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                % Pdydy (7)
                %------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                % d / dx(2*i-1)
                    gJac(2*i-1,2*i-1)=gJac(2*i-1,2*i-1)+(2*x(2*n+i)*x(2*n+j)*dirac(s + x(2*i-1)))/(s + x(2*i-1))^2 - (2*x(2*n+i)*x(2*n+j)*sign(s + x(2*i-1)))/(s + x(2*i-1))^3;
                % d / dx(2*n+i)
                    gJac(2*i-1,2*n+i)=gJac(2*i-1,2*n+i)+(x(2*n+j)*sign(s + x(2*i-1)))/(s + x(2*i-1))^2;
                % d / dx(2*n+j)
                    gJac(2*i-1,2*n+j)=gJac(2*i-1,2*n+j)+(x(2*n+i)*sign(s + x(2*i-1)))/(s + x(2*i-1))^2;
            end
            % case (11)
            if j<=n && not(j>=n+1 || sum(j==Bndry)>0) && i==j+n
                % Pdy (8)
                 PJac(2*n+i,2*j-1)=PJac(2*n+i,2*j-1)+sign(x(2*j-1)+s)/(x(2*j-1)+s)^2*x(2*n+j);
                %------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                % Pdydy (8)
                %------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                % d / dx(2*j-1)
                    gJac(2*j-1,2*j-1)=gJac(2*j-1,2*j-1)+(2*x(2*n+i)*x(2*n+j)*dirac(s + x(2*j-1)))/(s + x(2*j-1))^2 - (2*x(2*n+i)*x(2*n+j)*sign(s + x(2*j-1)))/(s + x(2*j-1))^3;
                % d / dx(2*n+i)
                    gJac(2*j-1,2*n+i)=gJac(2*j-1,2*n+i)+(x(2*n+j)*sign(s + x(2*j-1)))/(s + x(2*j-1))^2;
                % d / dx(2*j-1)
                    gJac(2*j-1,2*n+j)=gJac(2*j-1,2*n+j)+(x(2*n+i)*sign(s + x(2*j-1)))/(s + x(2*j-1))^2;
            end
       end
    end
end

gJac=0.5*k*gJac;
PJac=k*PJac; %no (-) already included in Pdy
[ ~, P ] = ESB_nonlinearities(n,s,Bndry,order,X,e0,l);
fJac=PJac+gJac-P; %P=k*P;

% -------------------------------------------------------------------------
% Boundary Condition
% -------------------------------------------------------------------------
fJac(Boundry,:)=[];
fJac(:,Boundry)=[];

%% first order system
if order == 1
    fJac = [sparse(length(fJac),length(fJac)) sparse(length(fJac),length(fJac)); fJac sparse(length(fJac),length(fJac))]; %+D;
end

end


